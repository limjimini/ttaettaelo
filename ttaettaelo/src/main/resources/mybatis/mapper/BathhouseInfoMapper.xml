<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tanine.ttaettaelo.mapper.BathhouseInfoMapper">
	<resultMap id="bathhouseInfoMap" type="com.tanine.ttaettaelo.dto.BathhouseInfoDTO">
	    <id property="bathhouseInfoId" column="bathhouseInfoId" />
	    <result property="name" column="name" />
	    <result property="type" column="type" />
	    <result property="location" column="location" />
	    <result property="imgUrl" column="imgUrl" />
	    
	    <!-- 서브 쿼리 -->
	    <result property="avgRating" column="avgRating" />
    	<result property="reviewCount" column="reviewCount" />
    	<result property="likeCount" column="likeCount" />
	    
	    <!-- 목욕탕 태그 -->
	    <collection property="tagKeyword" ofType="com.tanine.ttaettaelo.dto.BathhouseTagDTO">
	        <result property="tagName" column="tagName"/>
	    </collection>
	</resultMap>

	<select id="getAllBathhouseInfo" resultMap="bathhouseInfoMap"> 
		SELECT <!-- 목욕탕 정보글 조회 -->
			b.bathhouse_info_id		AS bathhouseInfoId,
			b.name 					AS name,
			b.type 					AS type,
			b.location 				AS location,
			b.img_url				AS imgUrl,
			t.tag_name				AS tagName,
			AVG(r.rating) 			AS avgRating,
			COUNT(r.review_id) 		AS reviewCount,
			( SELECT COUNT(l.bathhouse_info_id)
				FROM ojt_bathhouse_info_like l
				WHERE l.bathhouse_info_id = b.bathhouse_info_id) AS likeCount
		FROM ojt_bathhouse_info b
		LEFT JOIN ojt_review r ON r.bathhouse_info_id = b.bathhouse_info_id
		INNER JOIN ojt_info_tag_mapping m ON b.bathhouse_info_id = m.bathhouse_info_id
		INNER JOIN ojt_bathhouse_tag t ON m.tag_id = t.tag_id
		GROUP BY
			b.bathhouse_info_id,
			b.name,
			b.type,
			b.location,
			b.img_url,
			t.tag_name
		ORDER BY
			b.bathhouse_info_id DESC
	</select>
	
	<select id="getInfoDetailed" parameterType="long" resultType="com.tanine.ttaettaelo.dto.BathhouseInfoDTO">
		SELECT <!-- 목욕탕 정보 상세글 조회 -->
			bathhouse_info_id 		AS bathhouseInfoId,
			name 					AS name,
			introduction 			AS introduction,
			type 					AS type,
			location 				AS location,
			start_time 				AS startTime,
			end_time 				AS endTime,
			closed_day 				AS closedDay,
			contact_number 			AS contactNumber,
			img_url 				AS imgUrl
		FROM
			ojt_bathhouse_info
		WHERE
			bathhouse_info_id = #{bathhouseInfoId}
	</select>
	
	<select id="getTagByBAthhouseInfoId" parameterType="long" resultType="com.tanine.ttaettaelo.dto.BathhouseTagDTO">
		SELECT <!-- 목욕탕 아이디(번호)에 해당하는 태그 가져오기 -->
			b.bathhouse_info_id 	AS bathhouseInfoId,
			t.tag_id 				AS tagId,
			t.tag_name 				AS tagName
		FROM ojt_bathhouse_tag t
		INNER JOIN ojt_info_tag_mapping m ON t.tag_id = m.tag_id
		INNER JOIN ojt_bathhouse_info b ON b.bathhouse_info_id = m.bathhouse_info_id
		WHERE
			b.bathhouse_info_id = #{bathhouseInfoId}
	</select>
	
	<select id="getLikedBathhouse" resultType="com.tanine.ttaettaelo.dto.BathhouseInfoDTO">
		SELECT <!-- 내가 좋아요한 목욕탕 리스트 얻기 -->
			b.bathhouse_info_id 	AS bathhouseInfoId,
			b.name 					AS name
		FROM ojt_bathhouse_info b
		LEFT JOIN ojt_bathhouse_info_like l ON b.bathhouse_info_id = l.bathhouse_info_id
		INNER JOIN ojt_member m ON l.member_id = m.member_id
		WHERE
			m.member_id = #{memberId}
	</select>
	
	<select id="getRandomImages" resultType="String">
		SELECT <!-- 랜덤으로 이미지 5개 뽑기 -->
			img_url 	AS imgUrl
		FROM
			ojt_bathhouse_info
		WHERE
			img_url IS NOT NULL
		AND 
			img_url != ''
		ORDER BY
			RAND() LIMIT 5
	</select>
</mapper>
